
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!usr/bin/env Rscript
> 
> # R version 4.0
> 
> #1. Set working directory
> source("~/scratch/gete-gbm/bin/util.R")
> resultsPath <- "~/scratch/temp/"
> setwd(resultsPath)
> print(paste0("Results path:", getwd()))
[1] "Results path:/scratch/samkyy/temp"
> mkdirToday()
[1] "Current working directory: /scratch/samkyy/temp"
[1] "New working directory: /scratch/samkyy/temp/2023-02-14"
Warning message:
In dir.create(file.path(maindir, subdir)) :
  '/home/samkyy/scratch/temp//2023-02-14' already exists
> print(paste0("Output path:", getwd()))
[1] "Output path:/scratch/samkyy/temp/2023-02-14"
> 
> set.seed(108)
> 
> #2. Set library path
> .libPaths(c("/scratch/samkyy/gete-gbm/renv/library/R-4.0/x86_64-pc-linux-gnu",
+     "/tmp/RtmpJsRC8Z/renv-system-library",
+     .libPaths()))
> .libPaths()
[1] "/home/samkyy/R/x86_64-pc-linux-gnu-library/tcga-gbm-R4/renv/library/R-4.0/x86_64-pc-linux-gnu"
[2] "/home/samkyy/R/x86_64-pc-linux-gnu-library/4.0"                                               
[3] "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/r/4.0.2/lib64/R/library"       
> cat("\n")

> 
> #2.1 Load libraries
> # source("~/scratch/gete-gbm/bin/util_monocle3.R")
> library(monocle3)
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: SingleCellExperiment
Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following objects are masked from ‘package:Biobase’:

    anyMissing, rowMedians


Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

The following object is masked from ‘package:Biobase’:

    rowMedians

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomeInfoDb

Attaching package: ‘monocle3’

The following objects are masked from ‘package:Biobase’:

    exprs, fData, fData<-, pData, pData<-

> library(Seurat)
Attaching SeuratObject

Attaching package: ‘Seurat’

The following object is masked from ‘package:SummarizedExperiment’:

    Assays

> library(SeuratWrappers)
Bioconductor version '3.12' is out-of-date; the current release version '3.16'
  is available with R version '4.2'; see https://bioconductor.org/install
> library(Matrix)

Attaching package: ‘Matrix’

The following object is masked from ‘package:S4Vectors’:

    expand

> library(ggplot2)
> library(patchwork)
> library(magrittr)
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ tibble  3.1.3     ✔ dplyr   1.0.7
✔ tidyr   1.1.3     ✔ stringr 1.4.0
✔ readr   2.0.1     ✔ forcats 0.5.1
✔ purrr   0.3.4     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::collapse()   masks IRanges::collapse()
✖ dplyr::combine()    masks Biobase::combine(), BiocGenerics::combine()
✖ dplyr::count()      masks matrixStats::count()
✖ dplyr::desc()       masks IRanges::desc()
✖ tidyr::expand()     masks Matrix::expand(), S4Vectors::expand()
✖ tidyr::extract()    masks magrittr::extract()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::first()      masks S4Vectors::first()
✖ dplyr::lag()        masks stats::lag()
✖ tidyr::pack()       masks Matrix::pack()
✖ ggplot2::Position() masks BiocGenerics::Position(), base::Position()
✖ purrr::reduce()     masks GenomicRanges::reduce(), IRanges::reduce()
✖ dplyr::rename()     masks S4Vectors::rename()
✖ purrr::set_names()  masks magrittr::set_names()
✖ dplyr::slice()      masks IRanges::slice()
✖ tidyr::unpack()     masks Matrix::unpack()
> library(conflicted)
> conflict_prefer("select", "dplyr") ## required in %>% dplyr
[conflicted] Will prefer dplyr::select over any other package
> conflict_prefer("rowRanges", "MatrixGenerics") # required in new_cell_data_set()
[conflicted] Will prefer MatrixGenerics::rowRanges over any other package
> 
> #3. Import Dataset 
> gbmsc <- readRDS("~/projects/def-ytanaka/common/te-gbm_proj/analysis/ge_gbmscIntUmap-subtypes.rds")
> # cds <- readRDS("/home/samkyy/projects/def-ytanaka/common/te-gbm_proj/analysis/2022_01_30_monocle/gbmsc_pseudo_clus6.rds"
> 
> #4. Create par object
> head(gbmsc@meta.data)
                       orig.ident  nUMI nGene log10GenesPerUMI   mitoRatio
GBM_AAACCTGCAATTCCTT-1          1 11916  4509        0.8964581 0.008308157
GBM_AAACCTGCACAGAGGT-1          1  4061  1671        0.8931295 0.068456045
GBM_AAACCTGGTGTGGCTC-1          1  4314  2102        0.9140969 0.070931850
GBM_AAACGGGGTCCGAATT-1          1  7251  2943        0.8985577 0.084402151
GBM_AAACGGGTCGAATGGG-1          1  1708  1049        0.9345048 0.066159251
GBM_AAAGATGGTCTCAACA-1          1  5158  2538        0.9170394 0.017642497
                                    cells    sample nCount_RNA nFeature_RNA
GBM_AAACCTGCAATTCCTT-1 AAACCTGCAATTCCTT-1 SF11159_2      11916         4509
GBM_AAACCTGCACAGAGGT-1 AAACCTGCACAGAGGT-1 SF11159_2       4061         1671
GBM_AAACCTGGTGTGGCTC-1 AAACCTGGTGTGGCTC-1 SF11159_2       4314         2102
GBM_AAACGGGGTCCGAATT-1 AAACGGGGTCCGAATT-1 SF11159_2       7251         2943
GBM_AAACGGGTCGAATGGG-1 AAACGGGTCGAATGGG-1 SF11159_2       1708         1049
GBM_AAAGATGGTCTCAACA-1 AAAGATGGTCTCAACA-1 SF11159_2       5158         2538
                       GBM_integrated_snn_res.0.8 GBM_seurat_clusters
GBM_AAACCTGCAATTCCTT-1                          7                   7
GBM_AAACCTGCACAGAGGT-1                          3                   3
GBM_AAACCTGGTGTGGCTC-1                          0                   0
GBM_AAACGGGGTCCGAATT-1                          0                   0
GBM_AAACGGGTCGAATGGG-1                          0                   0
GBM_AAAGATGGTCTCAACA-1                         14                  14
                       neuro.ident nCount_integrated nFeature_integrated
GBM_AAACCTGCAATTCCTT-1        GBM1                 0                   0
GBM_AAACCTGCACAGAGGT-1        GBM1                 0                   0
GBM_AAACCTGGTGTGGCTC-1        GBM1                 0                   0
GBM_AAACGGGGTCCGAATT-1        GBM1                 0                   0
GBM_AAACGGGTCGAATGGG-1        GBM1                 0                   0
GBM_AAAGATGGTCTCAACA-1        GBM1                 0                   0
                       integrated_snn_res.0.7 seurat_clusters MGMTme
GBM_AAACCTGCAATTCCTT-1                      1               3   TRUE
GBM_AAACCTGCACAGAGGT-1                      8               4   TRUE
GBM_AAACCTGGTGTGGCTC-1                      0               0   TRUE
GBM_AAACGGGGTCCGAATT-1                      0               6   TRUE
GBM_AAACGGGTCGAATGGG-1                      0               0   TRUE
GBM_AAAGATGGTCTCAACA-1                      0               0   TRUE
                       sampleCombined integrated_snn_res.0.2
GBM_AAACCTGCAATTCCTT-1        SF11159                      2
GBM_AAACCTGCACAGAGGT-1        SF11159                      5
GBM_AAACCTGGTGTGGCTC-1        SF11159                      0
GBM_AAACGGGGTCCGAATT-1        SF11159                      0
GBM_AAACGGGTCGAATGGG-1        SF11159                      0
GBM_AAAGATGGTCTCAACA-1        SF11159                      0
                       integrated_snn_res.0.3 integrated_snn_res.0.4
GBM_AAACCTGCAATTCCTT-1                      2                      1
GBM_AAACCTGCACAGAGGT-1                      5                      3
GBM_AAACCTGGTGTGGCTC-1                      0                      0
GBM_AAACGGGGTCCGAATT-1                      0                      0
GBM_AAACGGGTCGAATGGG-1                      0                      0
GBM_AAAGATGGTCTCAACA-1                      0                      0
                       integrated_snn_res.0.5 integrated_snn_res.0.6
GBM_AAACCTGCAATTCCTT-1                      2                      3
GBM_AAACCTGCACAGAGGT-1                      3                      4
GBM_AAACCTGGTGTGGCTC-1                      0                      0
GBM_AAACGGGGTCCGAATT-1                      0                      6
GBM_AAACGGGTCGAATGGG-1                      0                      0
GBM_AAAGATGGTCTCAACA-1                      7                      0
                                 gbm_subtype
GBM_AAACCTGCAATTCCTT-1 Classical-Mesenchymal
GBM_AAACCTGCACAGAGGT-1           Mesenchymal
GBM_AAACCTGGTGTGGCTC-1             Classical
GBM_AAACGGGGTCCGAATT-1             Classical
GBM_AAACGGGTCGAATGGG-1             Classical
GBM_AAAGATGGTCTCAACA-1             Classical
> Idents(gbmsc) <- gbmsc$`integrated_snn_res.0.3`
> DefaultAssay(gbmsc) <- "integrated"
> cds <- as.cell_data_set(gbmsc, group.by = gbmsc$integrated_snn_res.0.3)
Warning: Monocle 3 trajectories require cluster partitions, which Seurat does not calculate. Please run 'cluster_cells' on your cell_data_set object
> rm(gbmsc)
> gc()
            used   (Mb) gc trigger   (Mb)  max used   (Mb)
Ncells   6627220  354.0   10017075  535.0  10017075  535.0
Vcells 181742363 1386.6  529434341 4039.3 651571604 4971.1
> 
> #4.1 Group cells into clusters
> cds <- cluster_cells(cds, random_seed = 108)
> 
> #4.2 Print cells to cluster
> p1 <- plot_cells(cds, show_trajectory_graph = FALSE, group_label_size = 4)
> p2 <- plot_cells(cds, color_cells_by = "partition", show_trajectory_graph = FALSE, group_label_size = 4)
> 
> size = 7
> p1
> ggsave("r_gbmsc_ge_PC20r03_monocleUMAPs_clusters_seed108.tiff", units="in", width=size, height=size, dpi=300, compression = 'lzw')
> p2
> ggsave("r_gbmsc_ge_PC20r03_monocleUMAPs_partitions_seed108.tiff", units="in", width=size, height=size, dpi=300, compression = 'lzw')
> 
> par <- subset(as.Seurat(cds), monocle3_partitions == 1)
> # Convert back to monocle object and learn the graph
> par <- as.cell_data_set(par)
Using existing Monocle 3 cluster membership and partitions
> par <- learn_graph(par)
  |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100%
> # saveRDS(par, file="gbmsc_ge_pseudo_c7.rds")
> 
> #5. Select root cells
> # root_cells_gte <- head (rownames(gbmsc@meta.data[which(FetchData(gbmsc,"integrated_snn_res.0.3") == 7),]))
> # rm(gbmsc)
> # gc()
> 
> #6. Order Cells
> 
> #6.1 FUNCTION: programmatically choose which cells come first in the trajectory
> get_earliest_principal_node <- function(cds, clus="11"){
+   # cell_ids <- which(colData(cds)[, "integrated_snn_res.0.3"] == clus)
+   cell_ids <- which(colData(cds)[, "monocle3_clusters"] == clus)
+   
+   closest_vertex <- cds@principal_graph_aux[["UMAP"]]$pr_graph_cell_proj_closest_vertex
+   closest_vertex <- as.matrix(closest_vertex[colnames(cds), ])
+   root_pr_nodes <- igraph::V(principal_graph(cds)[["UMAP"]])$name[as.numeric(names(which.max(table(closest_vertex[cell_ids,]))))]
+   
+   root_pr_nodes
+ }
> 
> par_auto <- order_cells(par, root_pr_nodes=get_earliest_principal_node(par))
> 
> saveRDS(par_auto,paste0(resultsPath, "ge_monocle3.rds"))
> # save_monocle_objects(cds=par_auto, 
> #                     directory_path=getwd(), 
> #                     comment='GBMGSC analysis: hg38+TE sorted cells, root=cluster6, Stored 2023-02-13.')
> 
> p2 <- par_auto %>% plot_cells(color_cells_by = "pseudotime", 
+            label_cell_groups = FALSE, label_leaves = TRUE, label_branch_points = FALSE,
+            label_roots = TRUE,
+            trajectory_graph_color = "black",
+            graph_label_size = 3,
+            cell_size = 0.5)
Warning message:
`select_()` was deprecated in dplyr 0.7.0.
Please use `select()` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_warnings()` to see where this warning was generated. 
> p2
> 
> size=4
> ggsave("r_gbmsc_ge_PC20r03_monocleUMAPs_path.tiff", units="in", width=size, height=size, dpi=300, compression = 'lzw')
> 
> sessionInfo()
R version 4.0.2 (2020-06-22)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS/LAPACK: /cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/imkl/2020.1.217/compilers_and_libraries_2020.1.217/linux/mkl/lib/intel64_lin/libmkl_gf_lp64.so

locale:
 [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats4    parallel  stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] conflicted_1.1.0            forcats_0.5.1              
 [3] stringr_1.4.0               dplyr_1.0.7                
 [5] purrr_0.3.4                 readr_2.0.1                
 [7] tidyr_1.1.3                 tibble_3.1.3               
 [9] tidyverse_1.3.1             magrittr_2.0.1             
[11] patchwork_1.1.1             ggplot2_3.3.5              
[13] Matrix_1.3-2                SeuratWrappers_0.3.0       
[15] SeuratObject_4.0.0          Seurat_4.0.1               
[17] monocle3_1.0.0              SingleCellExperiment_1.12.0
[19] SummarizedExperiment_1.20.0 GenomicRanges_1.42.0       
[21] GenomeInfoDb_1.26.7         IRanges_2.24.1             
[23] S4Vectors_0.28.1            MatrixGenerics_1.2.1       
[25] matrixStats_0.58.0          Biobase_2.50.0             
[27] BiocGenerics_0.36.1        

loaded via a namespace (and not attached):
  [1] readxl_1.3.1           backports_1.2.1        plyr_1.8.6            
  [4] igraph_1.2.6           lazyeval_0.2.2         splines_4.0.2         
  [7] listenv_0.8.0          scattermore_0.7        digest_0.6.27         
 [10] htmltools_0.5.1.1      viridis_0.6.1          fansi_0.5.0           
 [13] memoise_2.0.0          tensor_1.5             cluster_2.1.1         
 [16] ROCR_1.0-11            tzdb_0.1.2             remotes_2.4.0         
 [19] globals_0.14.0         modelr_0.1.8           R.utils_2.11.0        
 [22] spatstat.sparse_2.0-0  colorspace_2.0-2       rvest_1.0.2           
 [25] ggrepel_0.9.1          haven_2.4.3            crayon_1.4.1          
 [28] RCurl_1.98-1.3         jsonlite_1.7.2         spatstat.data_2.1-0   
 [31] survival_3.2-13        zoo_1.8-9              glue_1.6.2            
 [34] polyclip_1.10-0        gtable_0.3.0           zlibbioc_1.36.0       
 [37] XVector_0.30.0         leiden_0.3.9           DelayedArray_0.16.3   
 [40] future.apply_1.7.0     abind_1.4-5            scales_1.1.1          
 [43] DBI_1.1.1              miniUI_0.1.1.1         Rcpp_1.0.7            
 [46] viridisLite_0.4.0      xtable_1.8-4           reticulate_1.20       
 [49] spatstat.core_2.3-0    proxy_0.4-26           rsvd_1.0.5            
 [52] htmlwidgets_1.5.3      httr_1.4.2             RColorBrewer_1.1-2    
 [55] ellipsis_0.3.2         ica_1.0-2              farver_2.1.0          
 [58] pkgconfig_2.0.3        R.methodsS3_1.8.1      uwot_0.1.10           
 [61] dbplyr_2.1.1           deldir_0.2-10          utf8_1.2.2            
 [64] labeling_0.4.2         tidyselect_1.1.1       rlang_0.4.11          
 [67] reshape2_1.4.4         later_1.2.0            cachem_1.0.5          
 [70] munsell_0.5.0          cellranger_1.1.0       tools_4.0.2           
 [73] cli_3.3.0              generics_0.1.0         broom_0.7.9           
 [76] ggridges_0.5.3         fastmap_1.1.0          goftest_1.2-2         
 [79] fs_1.5.0               fitdistrplus_1.1-5     RANN_2.6.1            
 [82] pbapply_1.4-3          future_1.21.0          nlme_3.1-152          
 [85] mime_0.11              R.oo_1.24.0            xml2_1.3.2            
 [88] rstudioapi_0.13        compiler_4.0.2         plotly_4.9.4.1        
 [91] png_0.1-7              spatstat.utils_2.2-0   reprex_2.0.1          
 [94] stringi_1.7.3          lattice_0.20-41        vctrs_0.3.8           
 [97] pillar_1.6.2           lifecycle_1.0.0        BiocManager_1.30.12   
[100] spatstat.geom_2.2-2    lmtest_0.9-38          RcppAnnoy_0.0.19      
[103] data.table_1.14.0      cowplot_1.1.1          bitops_1.0-7          
[106] irlba_2.3.3            httpuv_1.6.1           R6_2.5.0              
[109] promises_1.2.0.1       KernSmooth_2.23-18     gridExtra_2.3         
[112] parallelly_1.27.0      codetools_0.2-18       MASS_7.3-54           
[115] assertthat_0.2.1       leidenbase_0.1.3       withr_2.4.2           
[118] sctransform_0.3.2      GenomeInfoDbData_1.2.4 mgcv_1.8-34           
[121] hms_1.1.0              grid_4.0.2             rpart_4.1-15          
[124] Rtsne_0.15             shiny_1.6.0            lubridate_1.8.0       
> 
> proc.time()
   user  system elapsed 
310.956  23.386 358.197 
